{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Pokemon","state","loadedPokemon","regular","shiny","name","id","type","str","arrOfWords","split","arrOfWordsCased","i","length","word","push","toUpperCase","slice","toLowerCase","join","arrOfWords2","arrOfWordsCased2","word2","randomNumber","Math","round","random","url","fetch","then","response","json","data","setState","sprites","front_default","front_shiny","types","pokemonName","document","getElementById","value","url2","this","lowerCase","bothTypes","map","typesObject","className","src","alt","Capitalize","onClick","getNewPokemon","placeholder","searchPokemon","React","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a3763cee.chunk.js","sourcesContent":["import './App.css';\r\nimport React from 'react';\r\n\r\nclass Pokemon extends React.Component {\r\n  // Gotta catch em all gotta catch em all\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      loadedPokemon: false,\r\n      regular: null,\r\n      shiny: null,\r\n      name: null,\r\n      id: null,\r\n      type: [],\r\n    }\r\n  }\r\n\r\n  Capitalize(str) {\r\n    const arrOfWords = str.split(\" \");\r\n    const arrOfWordsCased = [];\r\n\r\n    for (let i = 0; i < arrOfWords.length; i++) {\r\n      const word = arrOfWords[i];\r\n      arrOfWordsCased.push(word[0].toUpperCase() + word.slice(1).toLowerCase());\r\n    }\r\n\r\n    return arrOfWordsCased.join(\" \");\r\n  }\r\n\r\n  lowerCase(str) {\r\n    const arrOfWords2 = str.split(\" \");\r\n    const arrOfWordsCased2 = [];\r\n\r\n    for (let i = 0; i < arrOfWords2.length; i++) {\r\n      const word2 = arrOfWords2[i];\r\n      arrOfWordsCased2.push(word2[0].toLowerCase() + word2.slice(1).toLowerCase());\r\n    }\r\n\r\n    return arrOfWordsCased2.join(\" \");\r\n  }\r\n\r\n  getNewPokemon() {\r\n    // I want real pokemon, dang it\r\n    const randomNumber = Math.round(Math.random() * 898)\r\n    const url = `https://pokeapi.co/api/v2/pokemon/${randomNumber}`\r\n    fetch(url)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        this.setState({\r\n          regular: data.sprites.front_default,\r\n          shiny: data.sprites.front_shiny,\r\n          name: data.name,\r\n          id: data.id,\r\n          types: data.types,\r\n          loadedPokemon: true,\r\n        })\r\n      })\r\n  }\r\n\r\n  searchPokemon() {\r\n    // Where dem beasties at\r\n    let pokemonName = document.getElementById(\"pokeInput\").value;\r\n    const url2 = `https://pokeapi.co/api/v2/pokemon/${this.lowerCase(pokemonName)}`\r\n    fetch(url2)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        this.setState({\r\n          regular: data.sprites.front_default,\r\n          shiny: data.sprites.front_shiny,\r\n          name: data.name,\r\n          id: data.id,\r\n          types: data.types,\r\n          loadedPokemon: true,\r\n        })\r\n      })\r\n  }\r\n\r\n  render() {\r\n    const bothTypes = this.state.types && this.state.types.map((typesObject) => typesObject.type.name).join(', ')\r\n\r\n    return (\r\n      <div className=\"main\">\r\n        {\r\n          this.state.loadedPokemon &&\r\n          <div className=\"grid-container\">\r\n            <div className=\"item item1\">\r\n              <img src={this.state.regular} alt=\"regular\"></img>\r\n            </div>\r\n            <div className=\"item item5\">\r\n              <img src={this.state.shiny} alt=\"shiny\"></img>\r\n            </div>\r\n            <div className=\"item item2\">\r\n              <h1>{this.Capitalize(this.state.name)}</h1>\r\n            </div>\r\n            <div className=\"item item3\">\r\n              <h3>Pokédex:</h3>\r\n              <p>{this.state.id}</p>\r\n            </div>\r\n            <div className=\"item item4\">\r\n              <h3>Type:</h3>\r\n              <p>{this.Capitalize(bothTypes)}</p>\r\n            </div>\r\n          </div>\r\n        }\r\n\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => this.getNewPokemon()}\r\n            className=\"btn btn-outline-warning btn-lg shadow-none\"\r\n          >\r\n            Random Pokémon\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"search-box\">\r\n          <form>\r\n            <input\r\n              id=\"pokeInput\"\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              placeholder=\"Name or Number\"\r\n            />\r\n            <button\r\n              id=\"search_button\"\r\n              type=\"button\"\r\n              className=\"btn btn-outline-warning btn-lg\"\r\n              onClick={() => this.searchPokemon()}\r\n            >\r\n              Search Pokémon\r\n            </button>\r\n          </form>\r\n        </div>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <Pokemon />\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}